spark-bench = {
  spark-submit-config = [
    {
      spark-bench-jar = "local:///opt/spark-bench/lib/spark-bench-2.3.0_0.4-SNAPSHOT.jar"
      conf = {
        "spark.ui.showConsoleProgress" = "false"
        "spark.ui.enabled" = "false"
        "spark.ui.retainedJobs" = "0"
        "spark.ui.retainedStages" = "0"
        "spark.ui.retainedTasks" = "0"
        "spark.sql.ui.retainedExecutions" = "0"
        "spark.sql.autoBroadcastJoinThreshold" = "-1"
        "spark.sql.crossJoin.enabled" = "true"
        "spark.serializer" = "org.apache.spark.serializer.KryoSerializer"
        "spark.debug.maxToStringFields" = "100"
        "spark.sql.warehouse.dir" = "hdfs://hdfs:9000/tpcds-warehouse-nonpartitioned-1GB"
        "spark.executor.cores" = "1"
        "spark.max.cores" = "80"
        "spark.executor.memory" = "1536M"
        "spark.driver.memory" = "2G"
        "spark.app.name" = "tpcds-1GB"
        "spark.kubernetes.container.image" = "cinple/spark:2.3-hadoop3.0.0"
      }
      suites-parallel = false
      workload-suites = [
        {
          descr = "Generate a nonpartitioned 1G dataset and queries"
          benchmark-output = "hdfs://hdfs:9000/tpcds-bench-output-nonpartitioned-gen-1GB.csv"
          parallel = false
          workloads = [
            {
              name = "tpcdsdatagen"
              tpcds-data-output = "hdfs://hdfs:9000/tpcds-data-nonpartitioned-1GB"
              clean = false
              tpcds-kit-dir = "hdfs://hdfs:9000/tpcds-kit"
              table-options = "hdfs://hdfs:9000/table-options-nonpartitioned-1GB.json"
              tpcds-scale = 1
            },
            {
              name = "tpcdsquerygen"
              tpcds-query-output = "hdfs://hdfs:9000/tpcds-queries-nonpartitioned-1GB"
              tpcds-kit-dir = "hdfs://hdfs:9000/tpcds-kit"
              tpcds-scale = 1
              tpcds-streams = 1
            }
          ]
        }
      ]
    }
  ]
}
