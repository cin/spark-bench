spark-bench = {
  spark-submit-config = [
    {
      spark-args = {
        executor-memory = "1536M"
        driver-memory = "2G"
        total-executor-cores = "36"
      }
      conf = {
        "spark.ui.showConsoleProgress" = "false"
        "spark.ui.enabled" = "false"
        "spark.ui.retainedJobs" = "0"
        "spark.ui.retainedStages" = "0"
        "spark.ui.retainedTasks" = "0"
        "spark.sql.ui.retainedExecutions" = "0"
        "spark.sql.autoBroadcastJoinThreshold" = "-1"
        "spark.sql.crossJoin.enabled" = "true"
        "spark.serializer" = "org.apache.spark.serializer.KryoSerializer"
        "spark.dynamicAllocation.enabled" = "false"
        "spark.shuffle.service.enabled" = "false"
        "spark.debug.maxToStringFields" = "100"
        "spark.sql.warehouse.dir" = "hdfs:///tpcds-warehouse-partitioned-10GB"
        "spark.executor.cores" = "1"
      }
      suites-parallel = false
      workload-suites = [
        {
          descr = "Generate a partitioned 10GB dataset and queries"
          benchmark-output = "hdfs:///tpcds-bench-output-partitioned-gen-10GB.csv"
          parallel = false
          workloads = [
            {
              name = "tpcdsdatagen"
              output = "tpcds-data-partitioned-10GB"
              clean = false
              tpcds-kit-dir = "/opt/tpcds-kit"
              table-options = "/opt/spark-bench/examples/tpcds/table-options-partitioned-10GB.json"
              tpcds-scale = 1
            },
            {
              name = "tpcdsquerygen"
              output = "/root/tpcds-queries-partitioned-10GB"
              tpcds-kit-dir = "/opt/tpcds-kit"
              tpcds-scale = 1
              tpcds-streams = 1
            }
          ]
        }
      ]
    }
  ]
}
